<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.SoMapper">
    <resultMap id="BaseResultMap" type="com.xq.live.model.So">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="so_amount" jdbcType="DECIMAL" property="soAmount"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="pay_type" jdbcType="TINYINT" property="payType"/>
        <result column="so_status" jdbcType="TINYINT" property="soStatus"/>
        <result column="so_type" jdbcType="TINYINT" property="soType"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <resultMap id="SoOutResultMap" type="com.xq.live.vo.out.SoOut" extends="BaseResultMap">
        <result column="so_id" jdbcType="BIGINT" property="soId"/>
        <result column="sku_id" jdbcType="BIGINT" property="skuId"/>
        <result column="sku_code" jdbcType="VARCHAR" property="skuCode"/>
        <result column="sku_name" jdbcType="VARCHAR" property="skuName"/>
        <result column="sku_num" jdbcType="INTEGER" property="skuNum"/>
        <result column="unit_price" jdbcType="DECIMAL" property="unitPrice"/>
        <result column="paid_time" jdbcType="TIMESTAMP" property="paidTime"/>
        <result column="shop_id" jdbcType="BIGINT" property="shopId"/>
    </resultMap>

    <resultMap id="SoOutForOrderResultMap" type="com.xq.live.vo.out.SoForOrderOut" extends="BaseResultMap">
        <result column="so_id" jdbcType="BIGINT" property="soId"/>
        <result column="sku_id" jdbcType="BIGINT" property="skuId"/>
        <result column="sku_code" jdbcType="VARCHAR" property="skuCode"/>
        <result column="sku_name" jdbcType="VARCHAR" property="skuName"/>
        <result column="sku_num" jdbcType="INTEGER" property="skuNum"/>
        <result column="unit_price" jdbcType="DECIMAL" property="unitPrice"/>
        <result column="paid_time" jdbcType="TIMESTAMP" property="paidTime"/>
        <collection property="coupons" ofType="com.xq.live.vo.out.CouponForOrderOut">
            <result column="coupon_id" jdbcType="BIGINT" property="couponId"/>
            <result column="coupon_code" jdbcType="VARCHAR" property="couponCode" />
            <result column="coupon_amount" jdbcType="INTEGER" property="couponAmount" />
            <result column="type" jdbcType="INTEGER" property="type" />
            <result column="qrcode_url" jdbcType="VARCHAR" property="qrcodeUrl" />
            <result column="is_used" jdbcType="INTEGER" property="isUsed" />
            <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
            <result column="expiry_date" jdbcType="DATE" property="expiryDate" />
            <result column="used_time" jdbcType="TIMESTAMP" property="usedTime" />
            <collection property="promotionRules" ofType="com.xq.live.model.PromotionRules">
                <result column="rule_id" jdbcType="BIGINT" property="id" />
                <result column="rule_type" jdbcType="INTEGER" property="ruleType" />
                <result column="rule_desc" jdbcType="VARCHAR" property="ruleDesc" />
                <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
                <result column="coupon_shop_id" jdbcType="BIGINT" property="shopId" />
                <result column="coupon_sku_id" jdbcType="BIGINT" property="skuId" />
            </collection>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
    id, so_amount, user_id, user_name, pay_type, so_status, so_type, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from so
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByUserIdTotal" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select
        count(1)
        from so
        where user_id = #{userId,jdbcType=BIGINT}
        and (so_status = 2 OR so_status = 3)
    </select>

    <select id="selectByPk" parameterType="java.lang.Long" resultMap="SoOutResultMap">
        select s.id, s.so_amount, s.user_id, s.user_name, s.pay_type, s.so_status, s.so_type, s.create_time,
        s.update_time,s.paid_time, sd.so_id, sd.sku_id, sd.sku_code, sd.sku_name, sd.sku_num, sd.unit_price
        from so s
        inner join so_detail sd on s.id = sd.so_id
        where s.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByPkForOrder" parameterType="java.lang.Long" resultMap="SoOutForOrderResultMap">
        select s.id, s.so_amount, s.user_id, s.user_name, s.pay_type, s.so_status, s.so_type, s.create_time,
        s.update_time,s.paid_time, sd.so_id, sd.sku_id, sd.sku_code, sd.sku_name, sd.sku_num, sd.unit_price,
        c.id as coupon_id,c.coupon_code,c.coupon_amount,c.type,c.qrcode_url,c.is_used,c.is_deleted,c.expiry_date,
        c.used_time,' ' as rule_desc
        from so s
        inner join so_detail sd on s.id = sd.so_id
        INNER JOIN coupon c on s.id = c.so_id
        where s.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="list" resultMap="SoOutResultMap">
        select s.id, s.so_amount, s.user_id, s.user_name, s.pay_type, s.so_status, s.so_type, s.create_time,
        s.update_time,s.paid_time, sd.so_id, sd.sku_id, sd.sku_code, sd.sku_name, sd.sku_num, sd.unit_price
        from so s
        inner join so_detail sd on s.id = sd.so_id
        <where>
            <if test="id != null">
                s.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and s.user_id = #{userId}
            </if>
            <if test="soStatus != null">
                and s.so_status = #{soStatus}
            </if>
            <if test="soType != null">
                and s.so_type = #{soType}
            </if>
        </where>
        order by id desc
        limit #{start}, #{rows}
    </select>

    <select id="listForShop" resultMap="SoOutResultMap">
        select s.id, s.so_amount, s.user_id, s.user_name, s.pay_type, s.so_status, s.so_type, s.create_time,
        s.update_time,s.paid_time
        from so s
        <where>
            <if test="id != null">
                s.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and s.user_id = #{userId}
            </if>
            <if test="soStatus != null">
                and s.so_status = #{soStatus}
            </if>
            <if test="soType != null">
                and s.so_type = #{soType}
            </if>
        </where>
        order by id desc
        limit #{start}, #{rows}
    </select>

    <select id="listTotal" resultType="java.lang.Integer">
        select count(s.id)
        from so s
        inner join so_detail sd on s.id = sd.so_id
        <where>
            <if test="id != null">
                s.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and s.user_id = #{userId}
            </if>
            <if test="soStatus != null">
                and s.so_status = #{soStatus}
            </if>
            <if test="soType != null">
                and s.so_type = #{soType}
            </if>
        </where>
    </select>

    <select id="listForShopTotal" resultMap="SoOutResultMap">
        select count(s.id)
        from so s
        <where>
            <if test="id != null">
                s.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and s.user_id = #{userId}
            </if>
            <if test="soStatus != null">
                and s.so_status = #{soStatus}
            </if>
            <if test="soType != null">
                and s.so_type = #{soType}
            </if>
        </where>
    </select>

    <!--根据订单ID获取用户当天是否领取过活动票-->
    <select id="hadBeenGiven" parameterType="com.xq.live.vo.in.SoInVo" resultType="java.lang.Integer">
        SELECT
    	count(1)
        FROM so_detail sd
        INNER JOIN so s ON sd.so_id = s.id
        INNER JOIN vote v on s.user_id = v.user_id
        WHERE s.user_id = #{userId,jdbcType=BIGINT}
        AND sd.sku_id = #{skuId,jdbcType=BIGINT}
        and v.act_id = #{actId,jdbcType=BIGINT}
        AND (TO_DAYS(sd.create_time) = TO_DAYS(now()))
    </select>

    <!--根据订单ID获取用户ID-->
    <select id="getUserIDBySoId" parameterType="com.xq.live.model.So"  resultType="java.lang.Long">
      SELECT s.user_id FROM so s
      WHERE s.id=#{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
      delete from so   where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.xq.live.model.So">
        insert into so (so_amount, user_id,
        user_name, pay_type, so_status,
        so_type, create_time, update_time
        )
        values (#{soAmount,jdbcType=DECIMAL}, #{userId,jdbcType=BIGINT},
        #{userName,jdbcType=VARCHAR}, #{payType,jdbcType=TINYINT}, #{soStatus,jdbcType=TINYINT},
        #{soType,jdbcType=TINYINT}, now(), now()
        )
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            select last_insert_id() as id
        </selectKey>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.So">
        update so
        <set>
            <if test="soAmount != null">
                so_amount = #{soAmount,jdbcType=DECIMAL},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=TINYINT},
            </if>
            <if test="soStatus != null">
                so_status = #{soStatus,jdbcType=TINYINT},
            </if>
            <if test="soType != null">
                so_type = #{soType,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xq.live.model.So">
        update so
        set so_amount = #{soAmount,jdbcType=DECIMAL},
          user_id = #{userId,jdbcType=BIGINT},
          user_name = #{userName,jdbcType=VARCHAR},
          pay_type = #{payType,jdbcType=TINYINT},
          so_status = #{soStatus,jdbcType=TINYINT},
          so_type = #{soType,jdbcType=TINYINT},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="paid" parameterType="com.xq.live.vo.in.SoInVo">
        update so set so_status = #{soStatus,jdbcType=TINYINT},
            paid_time = now(),
            update_time = now()
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="hexiao" parameterType="com.xq.live.vo.in.SoInVo">
        update so set so_status = #{soStatus,jdbcType=TINYINT},
        hx_time = now(),
        update_time = now()
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="cancel" parameterType="com.xq.live.vo.in.SoInVo">
        update so set so_status = #{soStatus,jdbcType=TINYINT},
        update_time = now()
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>
