<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.ActShopMapper">
    <resultMap id="BaseResultMap" type="com.xq.live.model.ActShop">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="act_id" jdbcType="BIGINT" property="actId"/>
        <result column="shop_id" jdbcType="BIGINT" property="shopId"/>
        <result column="shop_code" jdbcType="VARCHAR" property="shopCode"/>
        <result column="apply_status" jdbcType="INTEGER" property="applyStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="vote_num" jdbcType="INTEGER" property="voteNum"/>
        <result column="is_luoxuan" jdbcType="INTEGER" property="isLuoxuan"/>
    </resultMap>

    <resultMap id="ActShopOutResultMap" extends="BaseResultMap" type="com.xq.live.vo.out.ActShopOut">
        <result column="logo_url" jdbcType="VARCHAR" property="logoUrl"/>
        <result column="shop_name" jdbcType="VARCHAR" property="shopName"/>
        <result column="shop_info" jdbcType="VARCHAR" property="shopInfo"/>
        <result column="is_vote" jdbcType="INTEGER" property="isVote"/>

        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="group_code" jdbcType="VARCHAR" property="groupCode"/>
        <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
        <result column="group_vote_num" jdbcType="INTEGER" property="groupVoteNum"/>
    </resultMap>

    <resultMap id="ActShopForVoteByShopIdMap" extends="BaseResultMap" type="com.xq.live.vo.out.ActShopByShopIdOut">
        <result column="act_name" jdbcType="VARCHAR" property="actName" />
        <result column="act_status" jdbcType="INTEGER" property="actStatus" />
        <result column="act_desc" jdbcType="VARCHAR" property="actDesc" />
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
        <result column="main_pic" jdbcType="VARCHAR" property="mainPic" />
        <result column="act_url" jdbcType="VARCHAR" property="actUrl" />
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
        <result column="is_vote" jdbcType="INTEGER" property="isVote"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, act_id, shop_id, shop_code, apply_status, create_time, update_time,vote_num,is_luoxuan
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from act_shop
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from act_shop
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.xq.live.model.ActShop">
        insert into act_shop (id, act_id, shop_id, shop_code, apply_status,
        create_time, update_time)
        values (#{id,jdbcType=BIGINT}, #{actId,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT},
        #{shopCode,jdbcType=VARCHAR}, 1, now(), now())
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            select last_insert_id() as id
        </selectKey>
    </insert>
    <insert id="insertSelective" parameterType="com.xq.live.model.ActShop">
        insert into act_shop
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="actId != null">
                act_id,
            </if>
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="actId != null">
                #{actId,jdbcType=BIGINT},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.ActShop">
        update act_shop
        <set>
            <if test="actId != null">
                act_id = #{actId,jdbcType=BIGINT},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=BIGINT},
            </if>
            <if test="voteNum != null">
                vote_num = #{voteNum,jdbcType=INTEGER},
            </if>
            <if test="applyStatus != null">
                apply_status = #{applyStatus,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isLuoxuan != null">
                is_luoxuan = #{isLuoxuan,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xq.live.model.ActShop">
    update act_shop
    set act_id = #{actId,jdbcType=BIGINT},
      shop_id = #{shopId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <!--批量更新落选状态-->
    <update id="udateByLuo" parameterType="java.util.List">
    update act_shop
    set
       is_luoxuan =1
        WHERE apply_status =1
        AND id NOT IN
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.id,jdbcType=BIGINT}
        </foreach>
        AND act_id IN
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.actId,jdbcType=BIGINT}
        </foreach>
    </update>
    <!--批量更新第二轮落选状态-->
    <update id="udateByLuoTwo" parameterType="java.util.List">
        update act_shop
        set
        is_luoxuan =1
        WHERE apply_status =1
        AND shop_id NOT IN
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.shopId,jdbcType=BIGINT}
        </foreach>
        AND act_id IN
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.actId,jdbcType=BIGINT}
        </foreach>
    </update>

    <select id="countByActId" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select count(1) from act_shop where act_id = #{actId,jdbcType=BIGINT}
  </select>

    <select id="list" resultMap="ActShopOutResultMap">
        SELECT
        a.id,
        a.act_id,
        a.shop_id,
        a.shop_code,
        a.apply_status,
        a.create_time,
        a.update_time,
        s.shop_name,
        s.shop_info,
        s.logo_url,
        (select count(1) from vote where shop_id = s.id) as vote_num,
        (select count(1) from vote where shop_id = s.id
        <if test="voteUserId != null">
              AND  user_id = #{voteUserId}
        </if>
        ) as is_vote
        FROM
        act_shop a
        inner join shop s on a.shop_id = s.id
        <where>
            1=1
            <if test="id != null">
              and  a.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="actId != null">
                AND  a.act_id = #{actId,jdbcType=BIGINT}
            </if>
            <if test="searchKey != null">
                (and (s.shop_name like concat('%', #{searchKey,jdbcType=VARCHAR}, '%')
                or a.shop_code = #{searchKey,jdbcType=VARCHAR}))
            </if>
            and  a.apply_status = 1
            and  a.is_luoxuan = 0
        </where>
        ORDER by a.vote_num DESC
        limit #{start}, #{rows}
    </select>

    <select id="listForNewAct" resultMap="ActShopOutResultMap">
        SELECT
        a.id,
        a.act_id,
        a.shop_id,
        a.shop_code,
        a.apply_status,
        a.create_time,
        a.update_time,
        s.shop_name,
        s.shop_info,
        s.logo_url,
        a.vote_num,
        a.is_luoxuan,
        (select count(1) from vote where shop_id = s.id
            and act_id = a.act_id
        <if test="voteUserId != null and beginTime !=null and endTime !=null">
            AND  user_id = #{voteUserId}
            AND  (create_time BETWEEN #{beginTime} and #{endTime})
        </if>
        ) as is_vote
        <if test="type == 2">
        ,k.user_id,
        k.group_code,
        k.group_name,
        k.group_vote_num
        </if>
        FROM
        act_shop a
        inner join shop s on a.shop_id = s.id
        <if test="type == 2">
        inner join act_group k on a.shop_id = k.shop_id and a.act_id = k.act_id
        </if>
        <where>
            1=1
            <if test="id != null">
                and  a.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="actId != null">
                AND  a.act_id = #{actId,jdbcType=BIGINT}
            </if>
            <if test="searchKey != null and type == null">
                (and (s.shop_name like concat('%', #{searchKey,jdbcType=VARCHAR}, '%')
                or a.shop_code = #{searchKey,jdbcType=VARCHAR}))
            </if>
            <if test="searchKey != null and type == 2">
                (and (s.shop_name like concat('%', #{searchKey,jdbcType=VARCHAR}, '%')
                or k.group_code = #{searchKey,jdbcType=VARCHAR}))
            </if>
            <if test="city!=null">
                and s.city like concat('%', #{city,jdbcType=VARCHAR}, '%')
            </if>
            and  a.apply_status = 1
            and  a.is_luoxuan = 0
            <if test="type == 2">
            and k.is_deleted = 0
            </if>
        </where>
        ORDER by a.vote_num DESC
        limit #{start}, #{rows}
    </select>

    <select id="listForSoWrite" resultMap="ActShopOutResultMap">
        SELECT
        a.id,
        a.shop_id,
        a.vote_num
        FROM
        act_shop a
        <where>
            (a.act_id = 34 or a.act_id = 35)
            and  a.apply_status = 1
            and  a.is_luoxuan = 0
        </where>
        ORDER by a.vote_num DESC
    </select>

    <!--根据活动id查询商家列表-->
    <select id="listByActId" resultMap="ActShopOutResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        act_shop
        WHERE
        act_id=#{actId,jdbcType=BIGINT}
        AND  apply_status = 1
    </select>

    <select id="searchForShopId" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        act_shop
         where  (act_id = 34 or act_id = 35) and  apply_status = 1 AND  shop_id = #{shopId,jdbcType=BIGINT}
    </select>

    <select id="searchForShopIdNew" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        act_shop
        where
        <if test="skuId == 383">
            (act_id = 34 or act_id = 35) and  apply_status = 1 AND  shop_id = #{shopId,jdbcType=BIGINT}
        </if>
        <if test="skuId == 848">
            (act_id = 36) and  apply_status = 1 AND  shop_id = #{shopId,jdbcType=BIGINT}
        </if>
    </select>

    <select id="listForActByShopId" resultMap="ActShopForVoteByShopIdMap">
        SELECT
        a.id,
        a.act_id,
        a.shop_id,
        a.shop_code,
        a.apply_status,
        a.create_time,
        a.update_time,
        a.vote_num,
        a.is_luoxuan,
        b.act_name,
        b.act_status,
        b.act_desc,
        b.start_time,
        b.end_time,
        b.main_pic,
        b.act_url,
        b.is_deleted,
        (select count(1) from vote where act_id = a.act_id
        <if test="voteUserId != null">
            AND  user_id = #{voteUserId}
        </if>
        ) as is_vote
        FROM act_shop a
        INNER JOIN act_info b on a.act_id = b.id
        <where>
            1=1
            <if test="id != null">
              and  a.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="shopId != null">
                AND  a.shop_id = #{shopId,jdbcType=BIGINT}
            </if>
            and a.apply_status = 1
            and  a.is_luoxuan = 0
        </where>
    </select>

    <select id="listTotal" resultType="java.lang.Integer">
        select count(1)
        FROM
        act_shop a
        inner join shop s on a.shop_id = s.id
        <if test="type == 2">
            inner join act_group k on a.shop_id = k.shop_id and a.act_id = k.act_id
        </if>
        <where>
            1=1
            <if test="id != null">
              and  a.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="actId != null">
                AND  a.act_id = #{actId,jdbcType=BIGINT}
            </if>
            <if test="searchKey != null and type == null">
                (and (s.shop_name like concat('%', #{searchKey,jdbcType=VARCHAR}, '%')
                or a.shop_code = #{searchKey,jdbcType=VARCHAR}))
            </if>
            <if test="searchKey != null and type == 2">
                (and (s.shop_name like concat('%', #{searchKey,jdbcType=VARCHAR}, '%')
                or k.group_code = #{searchKey,jdbcType=VARCHAR}))
            </if>
            <if test="city!=null">
                and s.city like concat('%', #{city,jdbcType=VARCHAR}, '%')
            </if>
            and a.apply_status = 1
            and  a.is_luoxuan = 0
            <if test="type == 2">
                and k.is_deleted = 0
            </if>
        </where>
    </select>

    <select id="findByInVo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from act_shop
        <where>
            1=1
            <if test="id != null">
               and id = #{id}
            </if>
            <if test="actId != null">
                and act_id = #{actId}
            </if>
            <if test="shopId != null">
                and shop_id = #{shopId}
            </if>
            and apply_status != 2
            and is_luoxuan = 0
        </where>
    </select>

</mapper>
