<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.AccountLogMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.AccountLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="pre_amount" jdbcType="DECIMAL" property="preAmount" />
    <result column="after_amount" jdbcType="DECIMAL" property="afterAmount" />
    <result column="operate_amount" jdbcType="DECIMAL" property="operateAmount" />
    <result column="operate_type" jdbcType="TINYINT" property="operateType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_name, account_id, account_name, pre_amount, after_amount, operate_amount, 
    operate_type, remark, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.AccountLog">
    insert into account_log (id, user_id, user_name, 
      account_id, account_name, pre_amount, 
      after_amount, operate_amount, operate_type, 
      remark, create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=BIGINT}, #{accountName,jdbcType=VARCHAR}, #{preAmount,jdbcType=DECIMAL}, 
      #{afterAmount,jdbcType=DECIMAL}, #{operateAmount,jdbcType=DECIMAL}, #{operateType,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR}, now())
      <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
        select last_insert_id() as id
      </selectKey>
  </insert>

  <select id="listTotal" parameterType="com.xq.live.vo.in.AccountLogInVo" resultType="java.lang.Integer">
    select count(1)
    from account_log
    <where>
      <if test="id != null">
         and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="operateType != null">
        and operate_type = #{operateType,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <select id="list" parameterType="com.xq.live.vo.in.AccountLogInVo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account_log
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="operateType != null">
        and operate_type = #{operateType,jdbcType=INTEGER}
      </if>
    </where>
    order by id desc
    limit #{start}, #{rows}
  </select>

  <insert id="insertSelective" parameterType="com.xq.live.model.AccountLog">
    insert into account_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="preAmount != null">
        pre_amount,
      </if>
      <if test="afterAmount != null">
        after_amount,
      </if>
      <if test="operateAmount != null">
        operate_amount,
      </if>
      <if test="operateType != null">
        operate_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="preAmount != null">
        #{preAmount,jdbcType=DECIMAL},
      </if>
      <if test="afterAmount != null">
        #{afterAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateAmount != null">
        #{operateAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateType != null">
        #{operateType,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.AccountLog">
    update account_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="preAmount != null">
        pre_amount = #{preAmount,jdbcType=DECIMAL},
      </if>
      <if test="afterAmount != null">
        after_amount = #{afterAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateAmount != null">
        operate_amount = #{operateAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateType != null">
        operate_type = #{operateType,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.AccountLog">
    update account_log
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account_name = #{accountName,jdbcType=VARCHAR},
      pre_amount = #{preAmount,jdbcType=DECIMAL},
      after_amount = #{afterAmount,jdbcType=DECIMAL},
      operate_amount = #{operateAmount,jdbcType=DECIMAL},
      operate_type = #{operateType,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
