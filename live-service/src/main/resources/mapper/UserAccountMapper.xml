<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.UserAccountMapper">
    <resultMap id="BaseResultMap" type="com.xq.live.model.UserAccount">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="account_name" jdbcType="VARCHAR" property="accountName"/>
        <result column="account_type" jdbcType="TINYINT" property="accountType"/>
        <result column="account_amount" jdbcType="DECIMAL" property="accountAmount"/>
        <result column="account_status" jdbcType="TINYINT" property="accountStatus"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="version_no" jdbcType="INTEGER" property="versionNo"/>
        <result column="account_cardholder" jdbcType="VARCHAR" property="accountCardholder"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, user_name, account_name, account_type, account_amount, account_status, 
    is_deleted, create_time, update_time, version_no,account_cardholder
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_account
        where id = #{id,jdbcType=BIGINT}
    </select>
    <!--根据UserID获取当前用户信息-->
    <select id="findAccountByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_account
        where user_id = #{userId,jdbcType=BIGINT}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user_account
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.xq.live.model.UserAccount">
        insert into user_account (id, user_id, user_name,
        account_name, account_type, account_amount,
        account_status, is_deleted, create_time,update_time, version_no,account_cardholder
        )
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR},
        #{accountName,jdbcType=VARCHAR}, #{accountType,jdbcType=TINYINT}, #{accountAmount,jdbcType=DECIMAL},
        1, 0, now(), now(), 0,#{accountCardholder,jdbcType=VARCHAR}
        )
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            select last_insert_id() as id
        </selectKey>
    </insert>
    <insert id="insertSelective" parameterType="com.xq.live.model.UserAccount">
        insert into user_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="accountName != null">
                account_name,
            </if>
            <if test="accountType != null">
                account_type,
            </if>
            <if test="accountAmount != null">
                account_amount,
            </if>
            <if test="accountStatus != null">
                account_status,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="accountCardholder != null">
                account_cardholder,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="accountName != null">
                #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null">
                #{accountType,jdbcType=TINYINT},
            </if>
            <if test="accountAmount != null">
                #{accountAmount,jdbcType=DECIMAL},
            </if>
            <if test="accountStatus != null">
                #{accountStatus,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="accountCardholder != null">
                #{accountCardholder,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.UserAccount">
        update user_account
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="accountName != null">
                account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null">
                account_type = #{accountType,jdbcType=TINYINT},
            </if>
            <if test="accountAmount != null">
                account_amount = #{accountAmount,jdbcType=DECIMAL},
            </if>
            <if test="accountStatus != null">
                account_status = #{accountStatus,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="accountCardholder != null">
                account_cardholder = #{accountCardholder,jdbcType=VARCHAR},
            </if>
        </set>
        <where>
            <if test="id!=null">id=#{id,jdbcType=BIGINT}</if>
        </where>
    </update>
    <!--根据活动ID或则ID修改信息-->
    <update id="updateByUserID" parameterType="com.xq.live.model.UserAccount">
        update user_account
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="accountName != null">
                account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null">
                account_type = #{accountType,jdbcType=TINYINT},
            </if>
            <if test="accountAmount != null">
                account_amount = #{accountAmount,jdbcType=DECIMAL},
            </if>
            <if test="accountStatus != null">
                account_status = #{accountStatus,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="accountCardholder != null">
                account_cardholder = #{accountCardholder,jdbcType=VARCHAR},
            </if>
        </set>
        <where>
            <if test="id!=null">id=#{id,jdbcType=BIGINT}</if>
            <if test="userId!=null">AND user_id=#{userId,jdbcType=BIGINT}</if>
        </where>
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xq.live.model.UserAccount">
        update user_account
        set user_id = #{userId,jdbcType=BIGINT},
              user_name = #{userName,jdbcType=VARCHAR},
              account_name = #{accountName,jdbcType=VARCHAR},
              account_type = #{accountType,jdbcType=TINYINT},
              account_amount = #{accountAmount,jdbcType=DECIMAL},
              account_status = #{accountStatus,jdbcType=TINYINT},
              is_deleted = #{isDeleted,jdbcType=TINYINT},
              update_time = now(),
              account_cardholder = #{accountCardholder,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="income" parameterType="com.xq.live.vo.in.UserAccountInVo">
         update user_account
        set user_id = #{userId,jdbcType=BIGINT},
              account_amount = account_amount + #{occurAmount,jdbcType=DECIMAL},
              update_time = now(),
              version_no = version_no + 1
        where user_id = #{userId,jdbcType=BIGINT} and version_no = #{versionNo,jdbcType=INTEGER}
    </update>
    <!-- 账户支出 sql-->
    <update id="payout" parameterType="com.xq.live.vo.in.UserAccountInVo">
         update user_account
        set user_id = #{userId,jdbcType=BIGINT},
              account_amount = account_amount - #{occurAmount,jdbcType=DECIMAL},
              update_time = now(),
              version_no = version_no + 1
        where user_id = #{userId,jdbcType=BIGINT} and version_no = #{versionNo,jdbcType=INTEGER}
    </update>
</mapper>
