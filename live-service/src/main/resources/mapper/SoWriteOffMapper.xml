<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.SoWriteOffMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.SoWriteOff">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="so_id" jdbcType="BIGINT" property="soId" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="shop_amount" jdbcType="DECIMAL" property="shopAmount" />
    <result column="coupon_id" jdbcType="BIGINT" property="couponId" />
    <result column="coupon_code" jdbcType="VARCHAR" property="couponCode" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="coupon_amount" jdbcType="DECIMAL" property="couponAmount" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="cashier_id" jdbcType="BIGINT" property="cashierId" />
    <result column="cashier_name" jdbcType="VARCHAR" property="cashierName" />
    <result column="paid_amount" jdbcType="DECIMAL" property="paidAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_bill" jdbcType="INTEGER" property="isBill" />
  </resultMap>

  <resultMap id="SoWriteOffOutMap" extends="BaseResultMap" type="com.xq.live.vo.out.SoWriteOffOut">
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="total_service" jdbcType="DECIMAL" property="totalService" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
  </resultMap>

  <sql id="Base_Column_List">
    id, so_id, shop_id, shop_name, shop_amount, coupon_id, coupon_code, sku_id, coupon_amount,
    user_id, user_name, cashier_id, cashier_name, paid_amount, create_time, update_time,is_bill
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from so_write_off
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCouponId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from so_write_off
    where coupon_id = #{couponId,jdbcType=BIGINT}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from so_write_off
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.SoWriteOff">
    insert into so_write_off (id, so_id, shop_id,
      shop_name, shop_amount, coupon_id, 
      coupon_code, sku_id, coupon_amount, 
      user_id, user_name, cashier_id, 
      cashier_name, paid_amount, create_time, 
      update_time,is_bill)
    values (#{id,jdbcType=BIGINT}, #{soId,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT},
      #{shopName,jdbcType=VARCHAR}, #{shopAmount,jdbcType=DECIMAL}, #{couponId,jdbcType=BIGINT}, 
      #{couponCode,jdbcType=VARCHAR}, #{skuId,jdbcType=BIGINT}, #{couponAmount,jdbcType=DECIMAL}, 
      #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{cashierId,jdbcType=BIGINT}, 
      #{cashierName,jdbcType=VARCHAR}, #{paidAmount,jdbcType=DECIMAL}, now(),
      now(),0)
      <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
        select last_insert_id() as id
      </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.model.SoWriteOff">
    insert into so_write_off
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="soId != null">
        so_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="shopAmount != null">
        shop_amount,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="couponCode != null">
        coupon_code,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="couponAmount != null">
        coupon_amount,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="cashierId != null">
        cashier_id,
      </if>
      <if test="cashierName != null">
        cashier_name,
      </if>
      <if test="paidAmount != null">
        paid_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isBill != null">
        is_bill,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="soId != null">
        #{soId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopAmount != null">
        #{shopAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponCode != null">
        #{couponCode,jdbcType=VARCHAR},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="couponAmount != null">
        #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="cashierId != null">
        #{cashierId,jdbcType=BIGINT},
      </if>
      <if test="cashierName != null">
        #{cashierName,jdbcType=VARCHAR},
      </if>
      <if test="paidAmount != null">
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isBill != null">
        #{isBill,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.SoWriteOff">
    update so_write_off
    <set>
      <if test="soId != null">
        so_id = #{soId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="shopAmount != null">
        shop_amount = #{shopAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponCode != null">
        coupon_code = #{couponCode,jdbcType=VARCHAR},
      </if>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=BIGINT},
      </if>
      <if test="couponAmount != null">
        coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="cashierId != null">
        cashier_id = #{cashierId,jdbcType=BIGINT},
      </if>
      <if test="cashierName != null">
        cashier_name = #{cashierName,jdbcType=VARCHAR},
      </if>
      <if test="paidAmount != null">
        paid_amount = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isBill != null">
        is_bill = #{isBill,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.SoWriteOff">
    update so_write_off
    set so_id = #{soId,jdbcType=BIGINT},
      shop_id = #{shopId,jdbcType=BIGINT},
      shop_name = #{shopName,jdbcType=VARCHAR},
      shop_amount = #{shopAmount,jdbcType=DECIMAL},
      coupon_id = #{couponId,jdbcType=BIGINT},
      coupon_code = #{couponCode,jdbcType=VARCHAR},
      sku_id = #{skuId,jdbcType=BIGINT},
      coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      cashier_id = #{cashierId,jdbcType=BIGINT},
      cashier_name = #{cashierName,jdbcType=VARCHAR},
      paid_amount = #{paidAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_bill = #{isBill,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--批量修改符合条件订单的结算状态(适用版，通过shopid和时间段批量修改)-->
  <update id="updateByShopId" parameterType="com.xq.live.vo.in.SoWriteOffInVo">
    UPDATE so_write_off woff
    INNER JOIN so s ON woff.so_id=s.id
    INNER JOIN sku sk ON woff.sku_id = sk.id
    SET woff.is_bill=1
    WHERE
    woff.shop_id=#{shopId,jdbcType=BIGINT}
    AND  woff.is_bill=0
    AND sk.is_deleted=0
    <if test="begainTime !=null and endTime != null">
      and (woff.create_time BETWEEN #{begainTime} and #{endTime})
    </if>
  </update>

  <select id="list" resultMap="SoWriteOffOutMap">
    select
    sw.*,
    s.sku_name
    from so_write_off sw
    inner join sku s on sw.sku_id = s.id
    <where>
      <if test="id != null">
        sw.id = #{id}
      </if>
      <if test="soId != null">
        and sw.so_id = #{soId}
      </if>
      <if test="shopId != null">
        and sw.shop_id = #{shopId}
      </if>
      <if test="shopName != null and shopName !=''">
        and sw.shop_name = #{shopName}
      </if>
      <if test="userId != null and userId !=''">
        and sw.user_id = #{userId}
      </if>
      <if test="skuId != null">
        and sw.sku_id = #{skuId}
      </if>
      <if test="couponId != null">
        and sw.coupon_id = #{couponId}
      </if>
      <if test="couponCode != null and couponCode !=''">
        and sw.coupon_code = #{couponCode}
      </if>
      <if test="begainTime !=null and endTime != null">
        and (sw.create_time BETWEEN #{begainTime} and #{endTime})
      </if>
      <if test="isBill !=null">
        and sw.is_bill = #{isBill,jdbcType=INTEGER}
      </if>
      and s.is_deleted = 0
    </where>
    order by create_time ASC
    limit #{start}, #{rows}
  </select>

  <select id="total" resultMap="SoWriteOffOutMap">
    select
    SUM(paid_amount) as total_price,
    (
    (
    SELECT
    convert(IFNULL(COUNT(1)-COUNT(1),0),decimal(11,2))
    FROM
    so_write_off swo,
    sku ss
    WHERE
    swo.sku_id = ss.id
    AND (ss.sku_type = 3 or (ss.sku_type =1 and ss.id = 406))
    <if test="shopId != null">
      and swo.shop_id = #{shopId}
    </if>
    <if test="begainTime !=null and endTime != null">
      and (swo.create_time BETWEEN #{begainTime} and #{endTime})
    </if>
    <if test="isBill !=null">
      and swo.is_bill = #{isBill,jdbcType=INTEGER}
    </if>
    ) + (
    SELECT
    convert(IFNULL(sum(coupon_amount) / 10,0),decimal(11,2))
    FROM
    so_write_off swo,
    sku ss
    WHERE
    swo.sku_id = ss.id
    AND ss.sku_type = 1
    <if test="shopId != null">
      and swo.shop_id = #{shopId}
    </if>
    <if test="begainTime !=null and endTime != null">
      and (swo.create_time BETWEEN #{begainTime} and #{endTime})
    </if>
    <if test="isBill !=null">
      and swo.is_bill = #{isBill,jdbcType=INTEGER}
    </if>
    )
    ) as total_service
    from so_write_off
    <where>
      <if test="id != null">
        id = #{id}
      </if>
      <if test="soId != null">
        and so_id = #{soId}
      </if>
      <if test="shopId != null">
        and shop_id = #{shopId}
      </if>
      <if test="shopName != null and shopName !=''">
        and shop_name = #{shopName}
      </if>
      <if test="userId != null and userId !=''">
        and user_id = #{userId}
      </if>
      <if test="skuId != null">
        and sku_id = #{skuId}
      </if>
      <if test="couponId != null">
        and coupon_id = #{couponId}
      </if>
      <if test="couponCode != null and couponCode !=''">
        and coupon_code = #{couponCode}
      </if>
      <if test="begainTime !=null and endTime != null">
        and (create_time BETWEEN #{begainTime} and #{endTime})
      </if>
      <if test="isBill !=null">
        and is_bill = #{isBill,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <select id="listTotal" resultType="java.lang.Integer">
    select count(1)
    from so_write_off sw
    inner join sku s on sw.sku_id = s.id
    <where>
      <if test="id != null">
        sw.id = #{id}
      </if>
      <if test="soId != null">
        and sw.so_id = #{soId}
      </if>
      <if test="shopId != null">
        and sw.shop_id = #{shopId}
      </if>
      <if test="shopName != null and shopName !=''">
        and sw.shop_name = #{shopName}
      </if>
      <if test="userId != null and userId !=''">
        and sw.user_id = #{userId}
      </if>
      <if test="skuId != null">
        and sw.sku_id = #{skuId}
      </if>
      <if test="couponId != null">
        and sw.coupon_id = #{couponId}
      </if>
      <if test="couponCode != null and couponCode !=''">
        and sw.coupon_code = #{couponCode}
      </if>
      <if test="begainTime !=null and endTime != null">
        and (sw.create_time BETWEEN #{begainTime} and #{endTime})
      </if>
      <if test="isBill !=null">
        and sw.is_bill = #{isBill,jdbcType=INTEGER}
      </if>
      and s.is_deleted = 0
    </where>
  </select>

  <select id="selectActShopCount" resultType="java.lang.Integer">
    select count(1)
    from so_write_off
    where sku_id = 383 and (TO_DAYS(create_time) = TO_DAYS(now()))
    and shop_id = #{shopId,jdbcType=BIGINT}
  </select>

  <select id="canGetAgio" parameterType="com.xq.live.vo.in.SoInVo" resultType="java.lang.Integer">
    select
    COUNT(1)
    from so s LEFT JOIN so_detail sw on s.id = sw.so_id
    where sw.sku_id = #{skuId,jdbcType=BIGINT} and s.so_status = 2 and s.user_id = #{userId,jdbcType=BIGINT}
  </select>
</mapper>
