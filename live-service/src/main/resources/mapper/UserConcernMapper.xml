<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.UserConcernMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.UserConcern">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="ref_id" jdbcType="BIGINT" property="refId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <resultMap id="UserConcernOutResultMap" type="com.xq.live.vo.out.UserConcernOut" extends="BaseResultMap">
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="icon_url" jdbcType="VARCHAR" property="iconUrl" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
  </resultMap>

  <sql id="Base_Column_List">
    id, user_id, type, ref_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_concern
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="isCollected" parameterType="com.xq.live.vo.in.UserConcernInVo" resultMap="UserConcernOutResultMap">
    select
    <include refid="Base_Column_List" />
    from user_concern
    <where>
      1=1
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="type != null">
        and type = #{type,jdbcType=INTEGER}
      </if>
      <if test="refId != null">
        and ref_id = #{refId,jdbcType=BIGINT}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_concern
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.vo.in.UserConcernInVo">
    insert into user_concern (id, user_id, type, 
      ref_id, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{refId,jdbcType=BIGINT}, now(), now()
      )
    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
      select last_insert_id() as id
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.vo.in.UserConcernInVo">
    insert into user_concern
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="refId != null">
        ref_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="refId != null">
        #{refId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.vo.in.UserConcernInVo">
    update user_concern
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="refId != null">
        ref_id = #{refId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.vo.in.UserConcernInVo">
    update user_concern
    set user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      ref_id = #{refId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 分页查询 start-->
  <select id="list" resultMap="UserConcernOutResultMap">
    select
    uc.*
    <if test="type != null and type == 1">
      ,u.user_name,u.nick_name,u.icon_url,u.sex
    </if>
    from user_concern uc
    <if test="type != null and type == 1 and userId != null">
      inner join user u on uc.ref_id = u.id
    </if>
    <if test="type != null and type == 1 and refId != null">
      inner join user u on uc.user_id = u.id
    </if>
    <where>
      1=1
      <if test="userId != null">
        and uc.user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="type != null">
        and uc.type = #{type,jdbcType=INTEGER}
      </if>
      <if test="refId != null">
        and uc.ref_id = #{refId,jdbcType=BIGINT}
      </if>
      <if test="createTime != null">
        and uc.create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        and uc.update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    order by uc.create_time desc
    limit #{start}, #{rows}
  </select>

  <select id="listTotal" resultType="java.lang.Integer">
    select count(1)
    from user_concern uc
    <if test="type != null and type == 1 and userId != null">
      inner join user u on uc.ref_id = u.id
    </if>
    <if test="type != null and type == 1 and refId != null">
      inner join user u on uc.user_id = u.id
    </if>
    <where>
      1=1
      <if test="userId != null">
        and uc.user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="type != null">
        and uc.type = #{type,jdbcType=INTEGER}
      </if>
      <if test="refId != null">
        and uc.ref_id = #{refId,jdbcType=BIGINT}
      </if>
      <if test="createTime != null">
        and uc.create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        and uc.update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
  <!-- 分页查询 end-->
</mapper>
