<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.CashApplyMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.CashApply">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="cash_amount" jdbcType="DECIMAL" property="cashAmount" />
    <result column="apply_status" jdbcType="TINYINT" property="applyStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="paid_time" jdbcType="TIMESTAMP" property="paidTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="paid_user_id" jdbcType="BIGINT" property="paidUserId" />
    <result column="paid_user_name" jdbcType="VARCHAR" property="paidUserName" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_name, account_id, account_name, cash_amount,
    apply_status, create_time, paid_time, update_time, paid_user_id, paid_user_name,begin_time,end_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cash_apply
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cash_apply
    where user_id = #{userId,jdbcType=BIGINT}
    order by id
  </select>

  <!-- 查询记录总数-->
  <select id="listTotal" parameterType="com.xq.live.vo.in.CashApplyInVo" resultType="java.lang.Integer">
    select count(1)
    from cash_apply
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="userName!= null and userName != ''">
        and user_name = #{userName,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cash_apply
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="userName!= null and userName != ''">
        and user_name = #{userName,jdbcType=VARCHAR}
      </if>
    </where>
    order by id desc
    limit #{start}, #{rows}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cash_apply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.CashApply">
    insert into cash_apply (id, user_id, user_name, 
      account_id, account_name, cash_amount, apply_status,
      create_time, paid_time, update_time, 
      paid_user_id, paid_user_name,begin_time,end_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=BIGINT}, #{accountName,jdbcType=VARCHAR},  #{cashAmount,jdbcType=DECIMAL}, 1,
      now(), #{paidTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{paidUserId,jdbcType=BIGINT}, #{paidUserName,jdbcType=VARCHAR}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
      <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER" >
        select last_insert_id() as id
      </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.model.CashApply">
    insert into cash_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="cashAmount != null">
        cash_amount,
      </if>
      <if test="applyStatus != null">
        apply_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="paidTime != null">
        paid_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="paidUserId != null">
        paid_user_id,
      </if>
      <if test="paidUserName != null">
        paid_user_name,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="cashAmount != null">
        #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="applyStatus != null">
        #{applyStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidTime != null">
        #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidUserId != null">
        #{paidUserId,jdbcType=BIGINT},
      </if>
      <if test="paidUserName != null">
        #{paidUserName,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.CashApply">
    update cash_apply
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="cashAmount != null">
        cash_amount = #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="applyStatus != null">
        apply_status = #{applyStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidTime != null">
        paid_time = #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paidUserId != null">
        paid_user_id = #{paidUserId,jdbcType=BIGINT},
      </if>
      <if test="paidUserName != null">
        paid_user_name = #{paidUserName,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.CashApply">
    update cash_apply
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account_name = #{accountName,jdbcType=VARCHAR},
      cash_amount = #{cashAmount,jdbcType=DECIMAL},
      apply_status = #{applyStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      paid_time = #{paidTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      paid_user_id = #{paidUserId,jdbcType=BIGINT},
      paid_user_name = #{paidUserName,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
